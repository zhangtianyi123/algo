package zty.practise.algo.leetcode100;


/**
 * 是否只能分成独立的两步
 * 第一步求出阶乘的结果
 * 第二步求出结果中的后导零
 * 
 * 还是找到数学规律 直接计算
 * 
 * 后导零本质上是要出现10 = 2 * 5
 * 2 出现的频率一定是要高于5的（2，4，6，8...）
 * 所以根据短板效应推断得出
 * 
 * 后导0的数量就是小于等于n的5和10的数量
 * 
 * 要注意的是25多出一个5  125多出两个
 * 每隔 5 个数，出现一个 5，每隔 25 个数，出现 2 个 5，每隔 125 个数，出现 3 个 5
 * 
 * 分开计算 比如50  有10个5  2个25（把5, 25, 125 分开考虑 各算各的）
 * 就相当于统计n中5的个数 25的个数 125的个数...
 * 
 * n / 5 + n / 25 + n / 125 ...
 * @author zhangtianyi
 *
 */
public class LeetCode172 {

	public int trailingZeroes(int n) {
	    int count = 0;
	    while (n > 0) {
	        count += n / 5;
	        n = n / 5;
	    }
	    return count;
	}
}
